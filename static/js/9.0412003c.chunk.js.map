{"version":3,"sources":["components/Views/HomeView.js","services/tmdb-api.js","images/no-image.jpg","services/makeImagePath.js","components/MovieList/MovieList.js","components/MovieList/MovieList.module.css","components/Hooks/usePages.js","components/Hooks/useLoader.js"],"names":["HomeView","useState","trandingMovie","setTrandingMovie","usePages","page","totalPage","setTotalPage","handleChangePage","useLoader","isLoading","setIsLoading","useEffect","fetchTrandingMovie","then","result","total","finally","movies","onChangePage","loading","currentPage","a","axios","get","data","total_pages","results","console","log","fetchMovie","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","defaults","baseURL","params","api_key","language","makeImagePath","path","size","noImage","MovieList","color","type","className","s","list","map","movie","posterPath","poster_path","item","to","id","imageWrapper","image","src","alt","title","width","style","backgroundColor","display","justifyContent","borderRadius","maxWidth","margin","count","variant","shape","onChange","event","pages","module","exports","history","useHistory","location","useLocation","Number","URLSearchParams","search","pageNumber","push"],"mappings":"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","file":"static/js/9.0412003c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrandingMovie } from '../../services/tmdb-api';\nimport MovieList from '../MovieList/MovieList';\nimport usePages from '../Hooks/usePages';\nimport useLoader from '../Hooks/useLoader';\n\nexport default function HomeView() {\n  const [trandingMovie, setTrandingMovie] = useState([]);\n\n  const { page, totalPage, setTotalPage, handleChangePage } = usePages();\n  const { isLoading, setIsLoading } = useLoader();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n\n    fetchTrandingMovie(page)\n      .then(([result, total]) => {\n        setTrandingMovie(result);\n        setTotalPage(total);\n      })\n      .finally(() => setIsLoading(isLoading => !isLoading));\n  }, [page, setIsLoading, setTotalPage]);\n\n  return (\n    <>\n      <h1>Tranding Movies</h1>\n\n      {trandingMovie && (\n        <MovieList\n          movies={trandingMovie}\n          total={totalPage}\n          onChangePage={handleChangePage}\n          loading={isLoading}\n          currentPage={page}\n        />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8978731d3453660c119868bf0fe3e32f';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = { api_key: API_KEY, language: 'en-EN' };\n\nexport async function fetchTrandingMovie(page = 1) {\n  try {\n    const {\n      data: { total_pages, results },\n    } = await axios.get(`/trending/movie/day?page=${page}`);\n    return [results, total_pages];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovie(query, page = 1) {\n  try {\n    const {\n      data: { total_pages, results },\n    } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n    return [results, total_pages];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    return cast;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n","export default __webpack_public_path__ + \"static/media/no-image.05423dcb.jpg\";","import noImage from '../images/no-image.jpg';\n\nexport function makeImagePath(path, size = 'w342') {\n  if (!path) return noImage;\n  return `https://image.tmdb.org/t/p/${size}/${path}`;\n}\n","import { NavLink } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport s from './MovieList.module.css';\nimport { makeImagePath } from '../../services/makeImagePath';\nimport Loader from 'react-loader-spinner';\n\nexport default function MovieList({\n  movies,\n  total,\n  onChangePage,\n  loading,\n  currentPage,\n}) {\n  return (\n    <>\n      {loading ? (\n        <Loader color=\"#ff0000\" size=\"23\" type=\"Rings\" />\n      ) : (\n        <ul className={s.list}>\n          {movies.map(movie => {\n            const posterPath = makeImagePath(movie.poster_path, 'w185');\n            return (\n              <li className={s.item} key={movie.id}>\n                <NavLink to={`/movies/${movie.id}`}>\n                  <div className={s.imageWrapper}>\n                    <img\n                      className={s.image}\n                      src={posterPath}\n                      alt={movie.title}\n                      width=\"186\"\n                    />\n                  </div>\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {total > 1 && !loading && (\n        <div\n          style={{\n            backgroundColor: '#3958A8',\n            display: 'flex',\n            justifyContent: 'center',\n            borderRadius: '5px',\n            maxWidth: '400px',\n            margin: '0 auto',\n          }}\n        >\n          <Pagination\n            count={total}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={(event, pages) => {\n              onChangePage(pages);\n            }}\n            page={currentPage}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__2uEWu\",\"item\":\"MovieList_item__koUiE\"};","import { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport default function usePages() {\n  const [totalPage, setTotalPage] = useState(1);\n  const history = useHistory();\n  const location = useLocation();\n\n  const page = Number(new URLSearchParams(location.search).get('page') ?? 1);\n\n  function handleChangePage(pageNumber) {\n    history.push({ ...location, search: `page=${pageNumber}` });\n  }\n\n  return { page, totalPage, setTotalPage, handleChangePage };\n}\n","import { useState } from 'react';\n\nexport default function useLoader() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  return { isLoading, setIsLoading };\n}\n"],"sourceRoot":""}